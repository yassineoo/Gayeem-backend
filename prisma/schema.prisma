generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = "mysql://cuppa:FZrP@Q3uuRZ*i7L@mysql-cuppa.alwaysdata.net/cuppa_gayeem"
}

model room {
  id     Int    @id @default(autoincrement())
  type   String @db.VarChar(55)
  name   String @db.VarChar(255)
  idUser Int
  users  users  @relation(fields: [idUser], references: [id], onUpdate: Restrict, map: "room_ibfk_1")

  @@index([idUser], map: "idUser")
}

model users {
  id                                            Int           @id @default(autoincrement())
  username                                      String        @unique(map: "username") @db.VarChar(255)
  password                                      String        @db.VarChar(255)
  role                                          String        @db.VarChar(255)
  state                                         String?       @default("active") @db.VarChar(255)
  email                                         String        @unique(map: "email") @db.VarChar(255)
  idMaster                                      Int?
  verification_number                           Int?
  selectedAvatarId                              Int?
  invitations_invitations_master_user_idTousers invitations[] @relation("invitations_master_user_idTousers")
  invitations_invitations_slave_user_idTousers  invitations[] @relation("invitations_slave_user_idTousers")
  room                                          room[]
  users                                         users?        @relation("usersTousers", fields: [idMaster], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fk_user_master")
  other_users                                   users[]       @relation("usersTousers")

  @@index([idMaster], map: "fk_user_master")
}

model invitations {
  id                                      Int       @id @default(autoincrement())
  invitation_code                         String    @unique(map: "invitation_code") @db.VarChar(10)
  master_user_id                          Int
  slave_user_id                           Int?
  is_accepted                             Int       @default(0)
  created_at                              DateTime? @default(now()) @db.DateTime(0)
  users_invitations_master_user_idTousers users     @relation("invitations_master_user_idTousers", fields: [master_user_id], references: [id], onUpdate: Restrict, map: "invitations_ibfk_1")
  users_invitations_slave_user_idTousers  users?    @relation("invitations_slave_user_idTousers", fields: [slave_user_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "invitations_ibfk_2")

  @@index([master_user_id], map: "master_user_id")
  @@index([slave_user_id], map: "slave_user_id")
}
